## Default values for charts.
## This is a YAML-formatted file.
## Declare variables to be passed into your templates.

## @param global karmada global config
global:
  ## @param global.imageRegistry Global Docker image registry
  imageRegistry: ""
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  imagePullSecrets: []

## @param commonLabels Add labels to all the deployed resources (sub-charts are not considered). Evaluated as a template
##
commonLabels: {}
## @param commonAnnotations Annotations to add to all deployed objects
##
commonAnnotations: {}
## @param installCRDs define flag whether to install CRD resources
##
installCRDs: true

## operator config
operator:
  ## karmada chart resource
  chartResource:
    ## karmada chart resource repository url
    repoUrl: https://release.daocloud.io/chartrepo/karmada
    ## karmada chart version
    version: 0.0.5
    ## karmada chart name
    name: karmada
  ## @param operator.labels
  labels: {}
  ## @param operator.replicaCount target replicas
  replicaCount: 1
  ## @param operator.podAnnotations
  podAnnotations: {}
  ## @param operator.podLabels
  podLabels: {}
  ## @param image.registry karmada-operator operator image registry
  ## @param image.repository karmada-operator operator image repository
  ## @param image.tag karmada-operator operator image tag (immutable tags are recommended)
  ## @param image.pullPolicy karmada-operator operator image pull policy
  ## @param image.pullSecrets Specify docker-registry secret names as an array
  ##
  image:
    registry: release.daocloud.io
    repository: karmada/karmada-operator
    tag: "v0.1.0"
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## Example:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param operator.resources
  resources:
    {}
    # If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  ## @param operator.nodeSelector
  nodeSelector: {}
  ## @param operator.affinity
  affinity: {}
  ## @param operator.tolerations
  tolerations: []
